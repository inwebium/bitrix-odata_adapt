{"version":3,"sources":["webpack:///./src/app/constants/content-types.ts","webpack:///./src/app/services/banners/banners.service.ts","webpack:///./src/app/services/departments/departments.resolver.ts","webpack:///./src/app/services/departments/departments.service.ts","webpack:///./src/app/services/photo-library/photo-library.service.ts","webpack:///./src/app/services/security/current-user-id.resolver.ts","webpack:///./src/app/services/security/groups.resolver.ts","webpack:///./src/app/services/videos/videos.service.ts"],"names":[],"mappings":"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","file":"common.js","sourcesContent":["export const contentTypes = {\r\n  album: 'Контентный тип альбома изображений',\r\n  photo: 'Контентный тип фото'\r\n};\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { Banner } from './banner';\r\nimport { ListItemsService } from '../list-items-service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BannersService extends ListItemsService<Banner>  {\r\n\r\n  getListRelativePath(): string {\r\n    return '';\r\n  }\r\n\r\n  getListTitle(): string {\r\n    return 'Баннеры';\r\n  }\r\n\r\n  getSelect(): string {\r\n    return 'Id,Title,slText,slUrl,slShow,slIndex,AttachmentFiles/ServerRelativeUrl';\r\n  }\r\n\r\n  getExpand(): string {\r\n    return 'AttachmentFiles';\r\n  }\r\n\r\n  getOrderBy(): [string, boolean][] {\r\n    return [['slIndex', true], ['Created', false]];\r\n  }\r\n\r\n  getTop(): number {\r\n    return 5;\r\n  }\r\n\r\n  convertListItemToEntity(item: any): Banner {\r\n    const banner: Banner = {\r\n      id: item.Id,\r\n      title: item.Title,\r\n      imageUrl: item.AttachmentFiles && item.AttachmentFiles.length > 0 ? item.AttachmentFiles[0].ServerRelativeUrl : null,\r\n      isShow: item.slShow,\r\n      url: item.slUrl,\r\n      text: item.slText\r\n    };\r\n    return banner;\r\n  }\r\n\r\n  convertEntityToListItem(entity: Banner) {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n\r\n  getMockItems(): Banner[] {\r\n    return [];\r\n  }\r\n\r\n  isMock(): boolean {\r\n    return false;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\n\r\nimport { Department } from './department';\r\nimport { DepartmentsService } from './departments.service';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class DepartmentsResolver implements Resolve<Department[]>  {\r\n  constructor(private departmentsService: DepartmentsService) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<Department[]> {\r\n    return this.departmentsService.getItems();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport * as moment from 'moment';\r\n\r\nimport { Department } from './department';\r\nimport { ListItemsService } from '../list-items-service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DepartmentsService extends ListItemsService<Department> {\r\n\r\n  getListRelativePath(): string {\r\n    return '';\r\n  }\r\n\r\n  getListTitle(): string {\r\n    return 'Департаменты';\r\n  }\r\n\r\n  getSelect(): string {\r\n    return 'Id,Title,slIndexNumber,slParentDepartment/Id,slParentDepartment/Title,slCode,slParentCode,'\r\n      + 'slUnitTypeName,slLookupManager/Id,slLookupManager/Title,slLookupManager/slFullName,'\r\n      + 'slLookupManager/slLogin,slLookupManager/slPositionName,slEmployeeCount,slLookupManager/slReason';\r\n  }\r\n\r\n  getExpand(): string {\r\n    return 'slLookupManager,slParentDepartment';\r\n  }\r\n\r\n  getOrderBy(): [string, boolean][] {\r\n    return [['slIndexNumber', true]];\r\n  }\r\n\r\n  getTop(): number {\r\n    return 5000;\r\n  }\r\n\r\n  isMock(): boolean {\r\n    return false;\r\n  }\r\n\r\n  getMockItems(): Department[] {\r\n    return [\r\n      { id: 1, title: 'Транслом', parentDepartmentId: null, },\r\n      { id: 2, title: 'Департамент маркетинга', parentDepartmentId: 1, },\r\n      { id: 3, title: 'Отдел рекламы', parentDepartmentId: 2, },\r\n      { id: 4, title: 'Отдел PR', parentDepartmentId: 2, },\r\n      { id: 5, title: 'Отдел дизайна', parentDepartmentId: 2, },\r\n      { id: 6, title: 'Отдел разработки', parentDepartmentId: 2, },\r\n      { id: 7, title: 'Отдел', parentDepartmentId: 2, },\r\n      { id: 8, title: 'Департамент логистики', parentDepartmentId: 1, },\r\n      { id: 9, title: 'Департамент финансов', parentDepartmentId: 1, },\r\n      { id: 10, title: 'Транслом', parentDepartmentId: null, },\r\n      { id: 11, title: 'Департамент маркетинга', parentDepartmentId: 10, },\r\n      { id: 12, title: 'Отдел рекламы', parentDepartmentId: 11, },\r\n      { id: 13, title: 'Отдел PR', parentDepartmentId: 11, },\r\n      { id: 14, title: 'Отдел дизайна', parentDepartmentId: 11, },\r\n      { id: 15, title: 'Отдел разработки', parentDepartmentId: 11, },\r\n      { id: 16, title: 'Отдел', parentDepartmentId: 11, },\r\n      { id: 17, title: 'Департамент логистики', parentDepartmentId: 10, },\r\n      { id: 18, title: 'Департамент финансов', parentDepartmentId: 10, }\r\n    ];\r\n  }\r\n\r\n  public convertListItemToEntity(item: any): Department {\r\n    const department: Department = {\r\n      id: item.Id,\r\n      title: item.Title,\r\n      code: item.slCode,\r\n      indexNumber: item.slIndexNumber,\r\n      parentCode: item.slParentCode,\r\n      unitTypeName: item.slUnitTypeName,\r\n      parentId: null,\r\n      parentDepartmentId: null,\r\n      parentDepartmentTitle: null,\r\n      employeeCount: item.slEmployeeCount\r\n    };\r\n\r\n    if (item.slParentDepartment != null) {\r\n      department.parentId = item.slParentDepartment.Id;\r\n      department.parentDepartmentId = item.slParentDepartment.Id;\r\n      department.parentDepartmentTitle = item.slParentDepartment.Title;\r\n    }\r\n\r\n    if (item.slLookupManager != null) {\r\n      department.lookupManagerId = item.slLookupManager.Id;\r\n      department.lookupManagerFullName = item.slLookupManager.slFullName;\r\n      department.lookupManagerPhoto = `/_layouts/15/userphoto.aspx?size=L&username=${item.slLookupManager.slLogin}`;\r\n      department.lookupManagerPosition = item.slLookupManager.slPositionName;\r\n      department.lookupManagerReason = item.slLookupManager.slReason;\r\n      department.profileManagerRoute = ['/phonebook', item.slLookupManager.Id];\r\n    }\r\n    return department;\r\n  }\r\n\r\n  convertEntityToListItem(entity: Department) {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, of } from 'rxjs';\r\nimport { flatMap, map } from 'rxjs/operators';\r\nimport * as moment from 'moment';\r\n\r\nimport { PortalService } from '../portal/portal.service';\r\nimport { ListItemsService } from '../list-items-service';\r\nimport { PhotoLibrary } from './photo-library';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PhotoLibraryService extends ListItemsService<PhotoLibrary>  {\r\n\r\n  constructor(private http: HttpClient,\r\n    private sharepointService: PortalService) {\r\n    super();\r\n  }\r\n\r\n  getListTitle(): string {\r\n    return 'Библиотека фотогалереи';\r\n  }\r\n\r\n  getListRelativePath(): string {\r\n    return 'slPhotoLibrary';\r\n  }\r\n\r\n  getSelect(): string {\r\n    return 'Id,Title,slAlbumCover,slAlbumDescription,slAlbumIndex,slPhotoIndex,File/ServerRelativeUrl,ContentType,ContentTypeId,Created';\r\n  }\r\n\r\n  getExpand(): string {\r\n    return 'File';\r\n  }\r\n\r\n  getOrderBy(): [string, boolean][] {\r\n    return [['Created', false]];\r\n  }\r\n\r\n  getTop(): number {\r\n    return 15;\r\n  }\r\n\r\n  convertListItemToEntity(item: any): PhotoLibrary {\r\n    const entity: PhotoLibrary = {\r\n      id: item.Id,\r\n      title: item.Title,\r\n      albumCover: item.slAlbumCover,\r\n      albumDescription: item.slAlbumDescription,\r\n      albumIndex: item.slAlbumIndex,\r\n      photoIndex: item.slPhotoIndex,\r\n      url: item.File && item.File.ServerRelativeUrl\r\n    };\r\n    return entity;\r\n  }\r\n\r\n  convertEntityToListItem(entity: PhotoLibrary) {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n\r\n  getMockItems(): PhotoLibrary[] {\r\n    return [];\r\n  }\r\n\r\n  isMock(): boolean {\r\n    return false;\r\n  }\r\n\r\n  getFiles(id: number, webId?: string): Observable<PhotoLibrary[]> {\r\n    return of([]);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { Observable, from, of } from 'rxjs';\r\n\r\nimport { PortalService } from '../portal/portal.service';\r\n\r\n@Injectable()\r\nexport class CurrentUserIdResolver implements Resolve<number> {\r\n\r\n  constructor(private sharepointService: PortalService) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<number> {\r\n    return of(this.sharepointService.getCurrentUserContext().userId);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { SecurityService } from './security.service';\r\n\r\n@Injectable()\r\nexport class GroupsResolver implements Resolve<string[]> {\r\n\r\n  constructor(private securityService: SecurityService) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<string[]> {\r\n    return this.securityService.getCurrentUserGroups();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport * as moment from 'moment';\r\n\r\nimport { Video } from './video';\r\nimport { ListItemsService } from '../list-items-service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class VideosService extends ListItemsService<Video> {\r\n\r\n  getListTitle(): string {\r\n    return 'Ссылки на видео';\r\n  }\r\n\r\n  getListRelativePath(): string {\r\n    return 'lists/slVideo';\r\n  }\r\n\r\n  getSelect(): string {\r\n    return 'Id,Title,slVideoUrl,slIsIFrame,Created';\r\n  }\r\n\r\n  getExpand(): string {\r\n    return null;\r\n  }\r\n\r\n  getOrderBy(): [string, boolean][] {\r\n    return [['Created', false]];\r\n  }\r\n\r\n  getTop(): number {\r\n    return 5000;\r\n  }\r\n\r\n  convertListItemToEntity(item: any): Video {\r\n    const entity: Video = {\r\n      id: item.Id,\r\n      title: item.Title,\r\n      isIFrame: item.slIsIFrame,\r\n      videoUrl: item.slVideoUrl,\r\n      created: new Date(item.Created),\r\n      createdTitle: moment(item.Created).fromNow()\r\n    };\r\n    return entity;\r\n  }\r\n\r\n  convertEntityToListItem(entity: Video) {\r\n    throw new Error('Method not implemented.');\r\n  }\r\n\r\n  getMockItems(): Video[] {\r\n    return [];\r\n  }\r\n\r\n  isMock(): boolean {\r\n    return false;\r\n  }\r\n\r\n}\r\n"],"sourceRoot":""}